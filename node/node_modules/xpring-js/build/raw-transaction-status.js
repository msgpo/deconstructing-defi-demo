"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const rippled_flags_1 = __importDefault(require("./rippled-flags"));
/** Abstraction around raw Transaction Status for compatibility. */
class RawTransactionStatus {
    /**
     * Note: This constructor is exposed for testing purposes. Clients of this code should favor using a static factory method.
     */
    constructor(isValidated, transactionStatusCode, lastLedgerSequence, isFullPayment) {
        this.isValidated = isValidated;
        this.transactionStatusCode = transactionStatusCode;
        this.lastLedgerSequence = lastLedgerSequence;
        this.isFullPayment = isFullPayment;
    }
    /**
     * Create a RawTransactionStatus from a TransactionStatus legacy protocol buffer.
     */
    static fromTransactionStatus(transactionStatus) {
        return new RawTransactionStatus(transactionStatus.getValidated(), transactionStatus.getTransactionStatusCode(), transactionStatus.getLastLedgerSequence(), true);
    }
    /**
     * Create a RawTransactionStatus from a GetTransactionResponse protocol buffer.
     */
    static fromGetTransactionResponse(getTransactionResponse) {
        var _a, _b, _c, _d, _e;
        const transaction = getTransactionResponse.getTransaction();
        if (!transaction) {
            throw new Error('Malformed input, `getTxResponse` did not contain a transaction.');
        }
        const isPayment = transaction.hasPayment();
        const flags = (_b = (_a = transaction.getFlags()) === null || _a === void 0 ? void 0 : _a.getValue()) !== null && _b !== void 0 ? _b : 0;
        const isPartialPayment = rippled_flags_1.default.checkFlag(rippled_flags_1.default.TF_PARTIAL_PAYMENT, flags);
        const isFullPayment = isPayment && !isPartialPayment;
        return new RawTransactionStatus(getTransactionResponse.getValidated(), (_d = (_c = getTransactionResponse
            .getMeta()) === null || _c === void 0 ? void 0 : _c.getTransactionResult()) === null || _d === void 0 ? void 0 : _d.getResult(), (_e = getTransactionResponse.getTransaction()) === null || _e === void 0 ? void 0 : _e.getLastLedgerSequence(), isFullPayment);
    }
}
exports.default = RawTransactionStatus;
//# sourceMappingURL=raw-transaction-status.js.map