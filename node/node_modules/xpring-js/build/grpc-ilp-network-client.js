"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const grpc_1 = require("grpc");
const get_balance_request_pb_1 = require("./generated/node/ilp/get_balance_request_pb");
const send_payment_request_pb_1 = require("./generated/node/ilp/send_payment_request_pb");
const utils_1 = __importDefault(require("./utils"));
const balance_service_grpc_pb_1 = require("./generated/node/ilp/balance_service_grpc_pb");
const ilp_over_http_service_grpc_pb_1 = require("./generated/node/ilp/ilp_over_http_service_grpc_pb");
class GrpcIlpNetworkClient {
    constructor(grpcURL) {
        if (utils_1.default()) {
            this.balanceClient = new balance_service_grpc_pb_1.BalanceServiceClient(grpcURL, grpc_1.credentials.createSsl());
            this.paymentClient = new ilp_over_http_service_grpc_pb_1.IlpOverHttpServiceClient(grpcURL, grpc_1.credentials.createSsl());
        }
        else {
            throw new Error('Use ILP-gRPC-Web Network Client on the browser!');
        }
    }
    getBalance(request, bearerToken) {
        const metaData = new grpc_1.Metadata();
        metaData.add('Authorization', bearerToken || '');
        return new Promise((resolve, reject) => {
            this.balanceClient.getBalance(request, metaData, (error, response) => {
                if (error != null || response === null) {
                    reject(error);
                    return;
                }
                resolve(response);
            });
        });
    }
    send(request, bearerToken) {
        const metaData = new grpc_1.Metadata();
        metaData.add('Authorization', bearerToken || '');
        return new Promise((resolve, reject) => {
            this.paymentClient.sendMoney(request, metaData, (error, response) => {
                if (error != null || response === null) {
                    reject(error);
                    return;
                }
                resolve(response);
            });
        });
    }
    /* eslint-disable class-methods-use-this */
    SendPaymentRequest() {
        return new send_payment_request_pb_1.SendPaymentRequest();
    }
    GetBalanceRequest() {
        return new get_balance_request_pb_1.GetBalanceRequest();
    }
}
exports.default = GrpcIlpNetworkClient;
//# sourceMappingURL=grpc-ilp-network-client.js.map