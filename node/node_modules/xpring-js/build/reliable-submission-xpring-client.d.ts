import { Wallet } from 'xpring-common-js';
import { BigInteger } from 'big-integer';
import { XpringClientDecorator } from './xpring-client-decorator';
import RawTransactionStatus from './raw-transaction-status';
import TransactionStatus from './transaction-status';
/**
 * A XpringClient which blocks on `send` calls until the transaction has reached a deterministic state.
 */
declare class ReliableSubmissionXpringClient implements XpringClientDecorator {
    private readonly decoratedClient;
    constructor(decoratedClient: XpringClientDecorator);
    getBalance(address: string): Promise<BigInteger>;
    getTransactionStatus(transactionHash: string): Promise<TransactionStatus>;
    send(amount: string | number | BigInteger, destination: string, sender: Wallet): Promise<string>;
    getLastValidatedLedgerSequence(): Promise<number>;
    getRawTransactionStatus(transactionHash: string): Promise<RawTransactionStatus>;
    accountExists(address: string): Promise<boolean>;
}
export default ReliableSubmissionXpringClient;
